import { QUIZES_URL } from "../constant.js";
import { apiSlice } from "./apiSlice.js";

export const quizesApiSlice = apiSlice.injectEndpoints({
    endpoints: (builder) => ({
        createQuizes: builder.mutation({
            query: (data) => ({
                url: `${QUIZES_URL}/create`,
                method: 'POST',
                body: data,
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json',
                }, // Ensures cookies (JWT) are sent
            }),
            invalidatesTags: ['Quiz'], // Invalidate the 'Quiz' cache tag when a quiz is created
        }),
        viewQuiz: builder.query({
            query: (id) => ({
                url: `${QUIZES_URL}/viewQuiz/${id}`,
                method: 'GET',
                providesTags: ['Quiz'], // Provides 'Quiz' tag for cache management
                keepUnusedDataFor: 5, // Keeps the data for 5 seconds before it expires
                credentials: 'include',
                // headers: {
                //     'Content-Type': 'application/json',
                // }, 
            }),
        }),
        deleteQuiz: builder.mutation({
            query: (id) => ({
                url: `${QUIZES_URL}/delete/${id}`,
                method: 'DELETE',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json',
                },
            }),
            // If the deletion is successful, we invalidate 'Quiz' to refresh the data
            invalidatesTags: ['Quiz'], 
        }),
        getAllCreatedQuizes: builder.query({
            query: () => ({
                url: `${QUIZES_URL}/getCreatedQuizes`,
                method: 'GET',
                providesTags: ['Quiz'],
                keepUnusedDataFor: 5, // Keeps data for 5 seconds
                credentials: 'include',
                // headers: {
                //     'Content-Type': 'application/json',
                // },
            }), 
        }),
        setStartTimeEndTimeOfQuiz: builder.mutation({
            query: (id) => ({
                url: `${QUIZES_URL}/se/${id}`,
                method: 'POST',
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json',
                },
            }),
            invalidatesTags: ['Quiz'], 
        }),
        joinQuiz: builder.mutation({
            query: (data) => ({
                url: `${QUIZES_URL}/join`,
                method: 'POST',
                body: data,
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json',
                },
            }),
            invalidatesTags: ['Quiz'], // Invalidate the 'Quiz' cache tag when a quiz is created
        }),
        handleQuiz: builder.mutation({
            query: ( {data,id} ) => ({
                url: `${QUIZES_URL}/handle-question/${id}`,
                method: 'POST',
                body: data,
                credentials: 'include',
                headers: {
                    'Content-Type': 'application/json',
                },
            })
        })
    }),
});

// Export hooks generated by RTK Query
export const { 
  useCreateQuizesMutation, 
  useViewQuizQuery,
  useDeleteQuizMutation,
  useGetAllCreatedQuizesQuery,
  useSetStartTimeEndTimeOfQuizMutation,
  useJoinQuizMutation,
  useHandleQuizMutation

} = quizesApiSlice;
